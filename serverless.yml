app: sls1-service
org: willydownhouse
service: sls1-service
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev

  apiGateway:
    apiKeys:
      - my-secret-api-key

  environment:
    DYNAMODB_OBS_TABLE: ${self:service}-obsTable-${sls:stage}
    STAGE: ${sls:stage}

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:PutItem"
            - "dynamodb:Get*"
            - "dynamodb:Scan*"
            - "dynamodb:UpdateItem"
            - "dynamodb:DeleteItem"
          Resource: arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:service}-obsTable-${sls:stage}

functions:
  health:
    handler: src/health.health
    events:
      - http:
          path: /health
          method: get
          private: true

  createOb:
    handler: src/obsCruds/createOb.createOb
    events:
      - http:
          path: /obs
          method: post
          private: true

  getObs:
    handler: src/obsCruds/getObs.getObs
    events:
      - http:
          path: /obs
          method: get
          private: true

  getOneOb:
    handler: src/obsCruds/getOneOb.getOneOb
    events:
      - http:
          path: /obs/{id}
          method: get
          private: true
          # request:
          #   parameters:
          #     paths:
          #       id: true

resources:
  Resources:
    ObsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        TableName: ${self:service}-obsTable-${sls:stage}

plugins:
  - serverless-offline
